@{
    ViewData["HideHeader"] = true;
    var patologias = ViewBag.Patologias as List<Patologias>;
    var actividades = ViewBag.Actividades as List<Actividades>; // Lista de actividades físicas
}

 <!-- LOGIN SECTION -->
    <section id="login-section" class="login-container">
        <div class="login-content">
            <button class="back-button" onclick="window.location.href='/Home/'">
                <img src="~/img/icon_back.svg" alt="Back">
            </button>
            <div class="illustration">
                <img src="~/img/img_login.svg" alt="Person holding apple illustration" />
            </div>
            <div class="welcome-message">
                <h1 class="welcome-heading">Te damos la bienvenida a la comunidad Zeta</h1>
                <form asp-action="LoginValidation" method="post" class="login-form">
                    <div class="inputs-group">
                        <div class="input-group">
                            <input type="email" name="email" placeholder="Correo electrónico" required  autocomplete="off"/>
                        </div>
                        <div class="input-group">
                            <input type="password" name="password" placeholder="Contraseña" required />
                        </div>
                        @if (ViewBag.Error != null)
                        {
                            <div style="color: red; text-align: center; margin-bottom: 10px;">
                                @ViewBag.Error
                            </div>
                        }

                        <div class="forgot-password">
                            <a href="/Account/ForgotPassword">
                                <span class="small-text">¿Has olvidado tu contraseña?</span>
                            </a>
                        </div>
                    </div>
                    <div class="button-group">
                        <button type="submit" class="btn-login">Iniciar sesión</button>
                        <button type="button" class="btn-create-account" onclick="navigateTo('ca1-section', 'login-section')">
                            Crear cuenta
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </section>

  <form id="create-account-form" method="POST" action="/Home/CreateAccount">
    <!-- CA1 SECTION -->
    <section id="ca1-section" class="ca1-container" style="display: none;">
        <button class="back-button" onclick="navigateTo('login-section', 'ca1-section')" type="button">
            <img src="~/img/icon_back.svg" alt="Back">
        </button>
        <div class="ca1-content">
            <div class="ca1-text">
                <h1 class="ca1-heading">Creá tu cuenta</h1>
                <h3 class="ca1-subheading">Ingresá tu email y contraseña</h3>
            </div>
            <div class="ca1-inputs-grid">
                <div class="ca1-input-group">
                    <input type="email" id="email" name="email" placeholder="Correo Electrónico" required />
                </div>
                <div class="ca1-input-group">
                    <input type="password" id="password" name="password" placeholder="Contraseña" required minlength="6" />
                </div>
            </div>
            <button type="button" class="ca1-btn-next" onclick="validateAndNavigate('ca2-section', 'ca1-section')">Siguiente</button>
            <!-- Modal -->
                <!-- Modal -->
            
<div id="emailModal" class="modal" style="display: none;">
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title">¡Correo electrónico ya registrado!</h4>
        </div>
        <div class="modal-body">
            <p>Este correo ya está registrado en nuestra base de datos.</p>
        </div>
        <div class="modal-footer">
            <button onclick="window.location.href='/home/login'" class="btn-modal cancel-btn">Volver al Login</button>
            <button onclick="closeModal()" class="btn-modal continue-btn">Continuar con otro correo</button>
        </div>
    </div>
</div>


        </div>
    </section>

    <!-- CA2 SECTION -->
    <section id="ca2-section" class="ca1-container" style="display: none;">
        <button class="back-button" onclick="navigateTo('ca1-section', 'ca2-section')" type="button">
            <img src="~/img/icon_back.svg" alt="Back">
        </button>
        <div class="ca1-content">
            <div class="ca1-text">
                <h1 class="ca1-heading">Creá tu cuenta</h1>
                <h3 class="ca1-subheading">Ingresa tus datos</h3>
            </div>
            <div class="ca1-inputs-grid">
                <div class="ca1-input-group">
                    <input type="text" id="nombre" name="nombre" placeholder="Nombre" required />
                </div>
                <div class="ca1-input-group">
                    <input type="text" id="apellido" name="apellido" placeholder="Apellido" required />
                </div>
                <div class="ca1-input-group">
                    <input type="date" id="fecha_nacimiento" name="fecha_nacimiento" placeholder="Fecha de Nacimiento" required />
                </div>
                <div class="ca1-input-group">
                    <select name="genero" id="genero" required>
                        <option value="" selected>Selecciona tu género</option>
                        <option value="1">Masculino</option>
                        <option value="2">Femenino</option>
                        <option value="3">Otro</option>
                    </select>
                </div>
                <div class="ca1-input-group">
                    <input type="text" id="altura" name="altura" placeholder="Altura en cm" required pattern="\d+" />
                </div>
                <div class="ca1-input-group">
                    <input type="text" id="peso" name="peso" placeholder="Peso en kg" required pattern="\d+" />
                </div>
            </div>
            <button type="submit" class="ca1-btn-next">Crear Cuenta</button>
        </div>
    </section>
</form>



    <!-- NUEVO CA3 SECTION (con Patologías y Actividades) -->
    <section id="ca3-section" class="ca1-container" style="display: none;">
        <button class="back-button" onclick="navigateTo('ca2-section', 'ca3-section')" type="button">
            <img src="~/img/icon_back.svg" alt="Back">
        </button>
        <div class="ca1-content">
            <div class="ca1-text">
                <h1 class="ca1-heading">Ingresa tu información de salud</h1>
                <h3 class="ca1-subheading">Selecciona tus patologías y actividades físicas</h3>
            </div>
            <div class="ca1-inputs-grid">
                <div class="ca1-input-group">
                    <select name="patologia" id="patologia" required>
                        <option value="" selected>Selecciona tu patología</option>
                        @if (patologias != null && patologias.Any())
                        {
                            foreach (var patologia in patologias)
                            {
                                <option value="@patologia.IdPatologia">@patologia.NombrePatologia</option>
                            }
                        }
                    </select>
                </div>
                <div class="ca1-input-group">
                    <input type="number" min="0" name="cantActividades" id="cantActividades" placeholder="Ingresa cuántos tipos de deportes/actividades físicas realizas en la cotidianidad" required onchange="generarInputsActividades()" />
                </div>
                <div id="actividades-container"></div>
            </div>
            <button type="submit" class="ca1-btn-next">Siguiente</button>
        </div>
    </section>

    <script>
    function navigateTo(showId, hideId) {
        document.getElementById(hideId).style.display = "none";
        // Para que el layout de la sección mostrada sea de tipo flex
        document.getElementById(showId).style.display = "flex";
    }

    function validateAndNavigate(showId, currentSectionId) {
        const currentSection = document.getElementById(currentSectionId);
        const inputs = currentSection.querySelectorAll("input, select");
        let isValid = true;

        inputs.forEach(input => {
            if (!input.checkValidity()) {
                isValid = false;
                input.reportValidity();
            }
        });

        if (!isValid) return;

        // Si estamos en CA1, validamos que el email no esté registrado.
        if (currentSectionId === 'ca1-section') {
            const email = document.getElementById('email').value;
            $.ajax({
                url: '/Home/ExisteMail',
                type: 'GET',
                data: { email: email },
                success: function(response) {
                    if (response.existe) {
                        document.getElementById('emailModal').style.display = 'block';
                    } else {
                        navigateTo(showId, currentSectionId);
                    }
                },
                error: function() {
                    alert('Hubo un error al verificar el correo.');
                }
            });
        } else {
            navigateTo(showId, currentSectionId);
        }
    }

    function generarInputsActividades() {
        const cantidad = document.getElementById('cantActividades').value;
        const container = document.getElementById('actividades-container');
        container.innerHTML = ""; // Limpiar contenedor

        for (let i = 1; i <= cantidad; i++) {
            const actividadGroup = document.createElement('div');
            actividadGroup.className = 'ca1-input-group';

            const selectActividad = document.createElement('select');
            selectActividad.name = `actividad_${i}`;
            selectActividad.required = true;

            const defaultOption = document.createElement('option');
            defaultOption.value = '';
            defaultOption.selected = true;
            defaultOption.textContent = `Selecciona la actividad física número ${i}`;
            selectActividad.appendChild(defaultOption);

            // Rellenar las opciones (se asume que el server renderiza estas opciones)
            @if (actividades != null && actividades.Any())
            {
                foreach (var actividad in actividades)
                {
                    <text>
                    const option = document.createElement('option');
                    option.value = "@actividad.IdActividad";
                    option.textContent = "@actividad.NombreActividad";
                    selectActividad.appendChild(option);
                    </text>
                }
            }

            actividadGroup.appendChild(selectActividad);
            container.appendChild(actividadGroup);

            const horasGroup = document.createElement('div');
            horasGroup.className = 'ca1-input-group';

            const inputHoras = document.createElement('input');
            inputHoras.type = 'number';
            inputHoras.min = '0';
            inputHoras.name = `horasActividad_${i}`;
            inputHoras.placeholder = `Ingresa cuántas horas por semana realizas la actividad ${i}`;
            inputHoras.required = true;

            horasGroup.appendChild(inputHoras);
            container.appendChild(horasGroup);
        }
    }

    // Agregar event listener para capturar la tecla Enter en el formulario de "Crear cuenta"
    document.getElementById("create-account-form").addEventListener("keydown", function(e) {
        if (e.key === "Enter") {
            // Prevenir el submit por defecto
            e.preventDefault();
            // Identificar la sección actualmente visible
            if (document.getElementById("ca1-section").style.display !== "none") {
                validateAndNavigate('ca2-section', 'ca1-section');
            } else if (document.getElementById("ca2-section").style.display !== "none") {
                // Para CA2, simular el clic en el botón "Crear Cuenta"
                document.querySelector("#ca2-section button[type='submit']").click();
            } else if (document.getElementById("ca3-section").style.display !== "none") {
                document.querySelector("#ca3-section button[type='submit']").click();
            }
        }
    });

    function closeModal() {
        document.getElementById('emailModal').style.display = 'none';
        document.getElementById('email').value = '';
        navigateTo('ca1-section', 'ca2-section');
    }
</script>

<!-- <script>
    function navigateTo(showId, hideId) {
        // Oculta la sección actual
        document.getElementById(hideId).style.display = "none";
        // Muestra la nueva sección
        document.getElementById(showId).style.display = "flex";
    }

    function validateAndNavigate(showId, currentSectionId) {
        // Validar los campos dentro de la sección actual antes de avanzar
        const currentSection = document.getElementById(currentSectionId);
        const inputs = currentSection.querySelectorAll("input, select");

        let isValid = true;

        inputs.forEach(input => {
            if (!input.checkValidity()) {
                isValid = false;
                input.reportValidity(); // Muestra el mensaje de error del campo inválido
            }
        });

        if (isValid) {
            navigateTo(showId, currentSectionId);
        }
    }

    function generarInputsActividades() {
        const cantidad = document.getElementById('cantActividades').value;
        const container = document.getElementById('actividades-container');

        // Limpiar el contenedor para evitar duplicaciones
        container.innerHTML = "";

        for (let i = 1; i <= cantidad; i++) {
            // Crear contenedor para el select de actividad
            const actividadGroup = document.createElement('div');
            actividadGroup.className = 'ca1-input-group';

            // Crear select para seleccionar la actividad
            const selectActividad = document.createElement('select');
            selectActividad.name = `actividad_${i}`;
            selectActividad.required = true;

            const defaultOption = document.createElement('option');
            defaultOption.value = '';
            defaultOption.selected = true;
            defaultOption.textContent = `Selecciona la actividad física número ${i}`;
            selectActividad.appendChild(defaultOption);

            // Llenar las opciones de actividades desde ViewBag
            @if (actividades != null && actividades.Any())
            {
                foreach (var actividad in actividades)
                {
                    <text>
                    const option = document.createElement('option');
                    option.value = "@actividad.IdActividad";
                    option.textContent = "@actividad.NombreActividad";
                    selectActividad.appendChild(option);
                    </text>
                }
            }

            actividadGroup.appendChild(selectActividad);
            container.appendChild(actividadGroup);

            // Crear contenedor para el input de horas
            const horasGroup = document.createElement('div');
            horasGroup.className = 'ca1-input-group';

            // Crear input para ingresar las horas semanales de la actividad
            const inputHoras = document.createElement('input');
            inputHoras.type = 'number';
            inputHoras.min = '0';
            inputHoras.name = `horasActividad_${i}`;
            inputHoras.placeholder = `Ingresa cuántas horas por semana realizas la actividad ${i}`;
            inputHoras.required = true;

            horasGroup.appendChild(inputHoras);
            container.appendChild(horasGroup);
        }
    }
    function validateAndNavigate(showId, currentSectionId) {
    // Validar los campos dentro de la sección actual antes de avanzar
    const email = document.getElementById('email').value;  // Obtener el email
    const currentSection = document.getElementById(currentSectionId);
    const inputs = currentSection.querySelectorAll("input, select");

    let isValid = true;

    inputs.forEach(input => {
        if (!input.checkValidity()) {
            isValid = false;
            input.reportValidity(); // Muestra el mensaje de error del campo inválido
        }
    });

    if (isValid) {
        // Verificar si el email ya está registrado
        $.ajax({
            url: '/Home/ExisteMail',
            type: 'GET',
            data: { email: email },
            success: function(response) {
                if (response.existe) {
                    // Mostrar el modal si el correo ya está registrado
                    document.getElementById('emailModal').style.display = 'block';
                } else {
                    // Si no está registrado, continuar con la navegación
                    navigateTo(showId, currentSectionId);
                }
            },
            error: function() {
                alert('Hubo un error al verificar el correo.');
            }
        });
    }
}

function closeModal() {
    document.getElementById('emailModal').style.display = 'none';
    document.getElementById('email').value = ''; // Limpiar el campo de correo electrónico
    navigateTo('ca1-section', 'ca2-section');  // Regresar a la sección CA1
}

</script> -->
